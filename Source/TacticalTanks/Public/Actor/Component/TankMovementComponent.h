// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "Components/ActorComponent.h"
#include "TankMovementComponent.generated.h"

class USplineComponent;
class ATankPawn;
UCLASS( ClassGroup=(Custom), meta=(BlueprintSpawnableComponent) )
class TACTICALTANKS_API UTankMovementComponent : public UActorComponent
{
	GENERATED_BODY()

public:	
	UTankMovementComponent();

	virtual void TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction) override;
	virtual void GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const override;

	void SetMoveToDestination(const FVector& NewTargetLocation);
protected:

	virtual void BeginPlay() override;

private:
	// Spline from the controlled pawn to the Cached destination
	UPROPERTY(VisibleAnywhere)
	TObjectPtr<USplineComponent> NavigationSpline;

	/* Implement Click to move behaviour */
	FVector CachedDestination = FVector::ZeroVector;

	UPROPERTY()
	TObjectPtr<ATankPawn> OwningTank;

	// Speed of the tank in units per second
	UPROPERTY(EditAnywhere, Category = "Tank|Movement")
	float TankSpeed = 200.f;

	// Rotation speed in degrees per second
	UPROPERTY(EditAnywhere, Category = "Tank|Movement")
	float TankRotationRate = 45.f;

	// Track how far along the spline the tank has moved
	float DistanceTraveled = 0.f;

	// Helper variable, to stay above the ground
	UPROPERTY(EditAnywhere, Category = "Tank|Movement")
	float TankHeight = 50.f;

	// The pawn will get this close to the destination
	UPROPERTY(EditDefaultsOnly, Category = "Tank|Movement")
	float AutoMoveAcceptanceRadius = 50.f;

	// PathPoints determined on the LocallyControlled Client, set with Server RPC
	UPROPERTY(ReplicatedUsing = OnRep_ReplicatedPathPoints)
	TArray<FVector> ReplicatedPathPoints;

	UFUNCTION()
	void OnRep_ReplicatedPathPoints();

	// Using the Pathpoints generated by the Navigation system we create a spline and start mowing along it
	void CreateSplineAndStartMoving(const TArray<FVector>& PathPoints);


	// Send Path calculated on the Client to the server 
	UFUNCTION(Server, Reliable, WithValidation)
	void ServerSetNewMoveToDestination(const TArray<FVector>& PathPoints);


	// When true, we interpolate the tank's location and rotation along the spline
	bool bAutoMove = false;

	void HandleTankMovement(float DeltaTime);

	ATankPawn* GetOwningTank();

	// Align Tank with the ground
	float TankZ = 0.f;
	float TankPitch = 0.f;

	void UpdateTankGrounding();
};
